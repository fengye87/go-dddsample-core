// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fengye87/dddsample-core/cargo/domain (interfaces: RoutingService)

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	domain "github.com/fengye87/dddsample-core/cargo/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockRoutingService is a mock of RoutingService interface.
type MockRoutingService struct {
	ctrl     *gomock.Controller
	recorder *MockRoutingServiceMockRecorder
}

// MockRoutingServiceMockRecorder is the mock recorder for MockRoutingService.
type MockRoutingServiceMockRecorder struct {
	mock *MockRoutingService
}

// NewMockRoutingService creates a new mock instance.
func NewMockRoutingService(ctrl *gomock.Controller) *MockRoutingService {
	mock := &MockRoutingService{ctrl: ctrl}
	mock.recorder = &MockRoutingServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoutingService) EXPECT() *MockRoutingServiceMockRecorder {
	return m.recorder
}

// FetchRoutesForSpecification mocks base method.
func (m *MockRoutingService) FetchRoutesForSpecification(arg0 *domain.RouteSpecification) ([]domain.Itinerary, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FetchRoutesForSpecification", arg0)
	ret0, _ := ret[0].([]domain.Itinerary)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FetchRoutesForSpecification indicates an expected call of FetchRoutesForSpecification.
func (mr *MockRoutingServiceMockRecorder) FetchRoutesForSpecification(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FetchRoutesForSpecification", reflect.TypeOf((*MockRoutingService)(nil).FetchRoutesForSpecification), arg0)
}
